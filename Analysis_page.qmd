---
title: "Analysis page"
editor: visual
---

```{r}
library(tidyverse)
library(sandwich)
library(lmtest)
library(car)
library(leaps)
final_df<-read.csv('census_dat.csv')

#shows correlation between income and total cases for each district. Lower income => more cases 

#income plot
correlation_coef <- final_df%>%
  group_by(district_name)%>%
  summarise(medincome_mean= mean(medincome), total_cases = sum(!duplicated(incident_num))) %>%
  summarise(correlation_coef = round(cor(total_cases, medincome_mean),2))

final_df%>%
  group_by(district_name)%>%
  select(year, district_name, medincome, incident_num)%>%
  summarise(medincome_mean= mean(medincome), total_cases = sum(!duplicated(incident_num))) %>%
  distinct()%>%
  ggplot(aes(district_name, medincome_mean,fill = total_cases))+
  geom_bar(stat= 'identity')+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  labs(y = 'Avg median income',title = 'Avg Median Income and Total Cases Over All Years')+
  annotate("text", x = Inf, y = Inf, label = paste("Correlation coefficient: ", correlation_coef), hjust = 1.5, vjust = 1)

#scatterplot with line of best fit 
final_df%>%
  group_by(district_name)%>%
  summarise(medincome_mean= mean(medincome), total_cases = sum(!duplicated(incident_num))) %>%
  ggplot(aes( medincome_mean,total_cases))+
  geom_point()+
  geom_smooth(method ='lm')+
  labs(y = 'Avg median income',title = 'Avg Median Income and Total Cases Over All Years')+
  annotate("text", x = Inf, y = Inf, label = paste("Correlation coefficient: ", correlation_coef), hjust = 1.5, vjust = 1)

#Bachelors degree plot
correlation_coef <- final_df%>%
  group_by(district_name)%>%
  summarise(pct_not_enrolled= mean(bacehelors_25/total_pop), total_cases = sum(!duplicated(incident_num)))%>%
  summarise(correlation_coef = round(cor(total_cases, pct_not_enrolled),2))

final_df%>%
  group_by(district_name)%>%
  summarise(pct_not_enrolled= mean(bacehelors_25/total_pop), total_cases = sum(!duplicated(incident_num))) %>%
  ggplot(aes(district_name, pct_not_enrolled,fill = total_cases))+
  geom_bar(stat= 'identity')+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  labs(y = 'Pct of population with high school diploma',title = 'Avg Populaion with HS Diploma and Total Cases Over All Years')+
  annotate("text", x = Inf, y = Inf, label = paste("Correlation coefficient: ", correlation_coef), hjust = 1.5, vjust = 1)

final_df%>%
  group_by(district_name)%>%
  summarise(pct_not_enrolled= mean(bacehelors_25/total_pop), total_cases = sum(!duplicated(incident_num))) %>%
  ggplot(aes(pct_not_enrolled, total_cases))+
  geom_point()+
  geom_smooth(method ='lm')


#not in labor force plot

correlation_coef <- final_df%>%
  group_by(district_name)%>%
  summarise(unemployment_pct= mean(not_in_labor_force/total_pop), total_cases = sum(!duplicated(incident_num)))%>%
  summarise(correlation_coef = round(cor(total_cases, unemployment_pct),2))

final_df%>%
  group_by(district_name)%>%
  summarise(unemployment_pct= mean(not_in_labor_force/total_pop), total_cases = sum(!duplicated(incident_num))) %>%
  ggplot(aes(district_name, unemployment_pct,fill = total_cases))+
  geom_bar(stat= 'identity')+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  labs(y = 'Pct of population employed',title = 'Avg Employment pct and Total Cases Over All Years')+
  annotate("text", x = Inf, y = Inf, label = paste("Correlation coefficient: ", correlation_coef), hjust = 1.5, vjust = 1)

final_df%>%
  group_by(district_name)%>%
  summarise(unemployment_pct= mean(not_in_labor_force/total_pop), total_cases = sum(!duplicated(incident_num))) %>%
  ggplot(aes(unemployment_pct, total_cases))+
  geom_point()+
  geom_smooth(method ='lm')

final_df%>%
  group_by(district_name)%>%
  summarise(unemployment_pct= mean(not_in_labor_force/total_pop), total_cases = sum(!duplicated(incident_num))) %>%
  ggplot(aes(unemployment_pct))+
  geom_histogram()

#total cases for districts plot
final_df%>%
  group_by(district_name)%>%
  summarise(total_cases = sum(!duplicated(incident_num))) %>%
  ggplot(aes(district_name,total_cases))+
  geom_bar(stat= 'identity')+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  labs(title = 'Total Cases by District')

#single parent household plot
correlation_coef <- final_df%>%
  group_by(district_name)%>%
  summarise(single_household = mean(one_parent/ total_pop),total_cases = sum(!duplicated(incident_num))) %>%
  summarise(correlation_coef = round(cor(single_household, total_cases),2))

final_df%>%
  group_by(district_name)%>%
  summarise(single_household = mean(one_parent/ total_pop),total_cases = sum(!duplicated(incident_num))) %>%
  ggplot(aes(district_name,single_household, fill = total_cases))+
  geom_bar(stat= 'identity')+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  labs(title = 'Pct of Households with Single Parent')+
  annotate("text", x = Inf, y = Inf, label = paste("Correlation coefficient: ", correlation_coef), hjust = 1.5, vjust = 1)

final_df%>%
  group_by(district_name)%>%
  summarise(single_household = mean(one_parent/ total_pop),total_cases = sum(!duplicated(incident_num))) %>%
  ggplot(aes(single_household, total_cases))+
  geom_point()+
  geom_smooth(method ='lm')


#married househomes
correlation_coef <- final_df%>%
  group_by(district_name)%>%
  summarise(married_house = mean(married_households/total_house_units),total_cases = sum(!duplicated(incident_num))) %>%
  summarise(correlation_coef = round(cor(married_house, total_cases),2))

final_df%>%
  group_by(district_name)%>%
  summarise(married_house_pct= mean(married_households/total_house_units), total_cases = sum(!duplicated(incident_num))) %>%
  ggplot(aes(district_name, married_house_pct,fill = total_cases))+
  geom_bar(stat='identity')+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  labs(y = 'Avg pct below poverty level ',title = 'Avg pct below poverty level over All Years')+
  annotate("text", x = Inf, y = Inf, label = paste("Correlation coefficient: ", correlation_coef), hjust = 1.5, vjust = 1)

final_df%>%
  group_by(district_name)%>%
  summarise(married_house_pct= mean(married_households/total_house_units), total_cases = sum(!duplicated(incident_num))) %>%
  ggplot(aes(married_house_pct, total_cases))+
  geom_point()+
  geom_smooth(method ='lm')

#vacant househomes

correlation_coef <- final_df%>%
  group_by(district_name)%>%
  summarise(vaccant_house = mean(vacancy_status/total_house_units),total_cases = sum(!duplicated(incident_num))) %>%
  summarise(correlation_coef = round(cor(vaccant_house, total_cases),2))

final_df%>%
  group_by(district_name)%>%
  summarise(vaccant_house_pct= mean(vacancy_status/total_house_units), total_cases = sum(!duplicated(incident_num))) %>%
  ggplot(aes(district_name, vaccant_house_pct,fill = total_cases))+
  geom_bar(stat='identity')+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  labs(y = 'Avg pct below poverty level ',title = 'Avg pct below poverty level over All Years')+
  annotate("text", x = Inf, y = Inf, label = paste("Correlation coefficient: ", correlation_coef), hjust = 1.5, vjust = 1)

final_df%>%
  group_by(district_name)%>%
  summarise(vaccant_house_pct= mean(vacancy_status/total_house_units), total_cases = sum(!duplicated(incident_num))) %>%
  ggplot(aes(vaccant_house_pct, total_cases))+
  geom_point()+
  geom_smooth(method ='lm')




library(olsrr)
lm_dat<-final_df%>%
  group_by(district_name, year)%>%
  summarise(unemployment=mean(not_in_labor_force/total_pop),medincome_mean= mean(medincome),bachelors = mean(bacehelors_25/total_pop),
            one_parent= mean(one_parent/total_house_units),married_house= mean(married_households/total_house_units),vacant_houses = mean(vacancy_status/total_house_units),
            total_cases = sum(!duplicated(incident_num)))

ols<-lm(total_cases~ district_name+ unemployment+ medincome_mean+bachelors+one_parent+ vacant_houses+married_house, data = lm_dat)
coeftest(ols, vcov. = vcovHC)
summary(ols) #92 adjusted Rsquared good for forecasting
vif(ols)
ols_step_all_possible(ols)
ols_step_forward_p(ols)
ols_step_backward_p(ols)
#interpretation: where you live is the best predictor of cases as shown by total cases by locations graph, p-values are high for other variables indicates multicollinearity
#vif, anything above 5 high collinearity, below 1 no collinearity, above 1 medium collinearity 

I(age^2)
ols<-lm(total_cases~+ unemployment +medincome_mean+bachelors+one_parent+married_house, data = lm_dat)
coeftest(ols, vcov. = vcovHC)
summary(ols)
vif(ols)
ols_step_forward_p(ols)
ols_step_backward_p(ols)


plot(ols)


#time series forecast:
library(dlym)

final_df%>%
  group_by(year)%>%
  summarise(total_cases = sum(!duplicated(incident_num)))%>%
  ggplot(aes(year, total_cases))+
  geom_line()

```
